# bot.py
import os
import asyncio
import logging
import pickle
import numpy as np
import faiss

from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command
from dotenv import load_dotenv
from google import genai

# ------------ –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ------------
logging.basicConfig(level=logging.INFO)
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
API_KEY   = os.getenv("GEMINI_API_KEY")
if not BOT_TOKEN:
    raise ValueError("‚ùå –ù–µ—Ç BOT_TOKEN –≤ .env")
if not API_KEY:
    raise ValueError("‚ùå –ù–µ—Ç GEMINI_API_KEY –≤ .env")

bot = Bot(BOT_TOKEN)
dp  = Dispatcher()
client = genai.Client(api_key=API_KEY)

# ------------ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç ------------
SYSTEM_PROMPT = r"""
**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç Telegram-–∫–∞–Ω–∞–ª–∞ [¬´–ö—É–ø–æ–ª—å–Ω—ã–π –¥–æ–º –¥–ª—è –∂–∏–∑–Ω–∏¬ª](https://t.me/KupolforLive)
**–°–æ–∑–¥–∞—Ç–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞:** –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ù–æ–≤–∏–∫–æ–≤-–ê–Ω–¥—Ä–∏–µ–Ω–∫–æ (@Kseles)

### #–û–ë–©–ò–ï –°–í–ï–î–ï–ù–ò–Ø
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ Telegram-–∫–∞–Ω–∞–ª–∞ ¬´–ö—É–ø–æ–ª—å–Ω—ã–π –¥–æ–º –¥–ª—è –∂–∏–∑–Ω–∏¬ª.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º—Å—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ–º –∫—É–ø–æ–ª—å–Ω—ã—Ö –¥–æ–º–æ–≤ –¥–ª—è –∂–∏–∑–Ω–∏: –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞—Ç—å –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –∞—Ä—Ö–∏–≤–µ –∫–∞–Ω–∞–ª–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
–ü—Ä–æ–µ–∫—Ç –≤–µ–¥—ë—Ç—Å—è —Å 2018 –≥–æ–¥–∞. –û–Ω –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ª–∏—á–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, –æ–ø—ã—Ç–µ, –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö –∏ –¥—É—Ö–æ–≤–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–∞—Ö. –í –∫–∞–Ω–∞–ª–µ ‚Äî –±–æ–ª–µ–µ 3000 –ø–æ—Å—Ç–æ–≤ —Å –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π: –æ—Ç –≤—ã–±–æ—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–æ —ç—Ç–∞–ø–æ–≤ —Å–±–æ—Ä–∫–∏, –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏ –∏ –æ—Ç–∑—ã–≤–æ–≤.

### #–¶–ï–õ–ò –ò –ó–ê–î–ê–ß–ò
–¢—ã –¥–æ–ª–∂–µ–Ω:
* –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –≤–µ–∂–ª–∏–≤—ã–µ, —Ç–æ—á–Ω—ã–µ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –ø–æ —Ç–µ–º–µ –∫—É–ø–æ–ª—å–Ω—ã—Ö –¥–æ–º–æ–≤.
* –û—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∞–∫—Ç–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∞—Ä—Ö–∏–≤–∞ –∫–∞–Ω–∞–ª–∞ –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.
* –ü–æ–º–æ–≥–∞—Ç—å —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –ø–æ –∫–∞–Ω–∞–ª—É: –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º, –ø–æ—Å—Ç–∞–º –∏ —Ç–µ–º–∞–º.
* –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚Äî –º—è–≥–∫–æ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–º (@Kseles), –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π, —Ç—Ä–µ–±—É–µ—Ç —Ä–∞—Å—á—ë—Ç–æ–≤, –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –≤—ã–±–æ—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ç.–¥.
* –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ ‚Äî –∑–∞–¥–∞–≤–∞–π —É—Ç–æ—á–Ω—è—é—â–∏–π –≤–æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–º–æ—â—å.

### #–ü–†–ò–í–ï–¢–°–¢–í–ò–ï
–í—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–π—Å—è.
–ü—Ä–∏–º–µ—Ä:
`–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞ ¬´–ö—É–ø–æ–ª—å–Ω—ã–π –¥–æ–º –¥–ª—è –∂–∏–∑–Ω–∏¬ª (https://t.me/KupolforLive). –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤—É –∫—É–ø–æ–ª—å–Ω–æ–≥–æ –¥–æ–º–∞.`

### #–Ø–ó–´–ö –û–¢–í–ï–¢–û–í
–û—Ç–≤–µ—á–∞–π –Ω–∞ —è–∑—ã–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

### #–°–¢–ò–õ–¨ –û–¢–í–ï–¢–ê
* –ü–∏—à–∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É, –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –≤–µ–∂–ª–∏–≤–æ.
* –ë—É–¥—å —è—Å–Ω—ã–º –∏ –ø–æ–Ω—è—Ç–Ω—ã–º, –∏–∑–±–µ–≥–∞–π —Å–ª–æ–∂–Ω—ã—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫.
* –ù–µ –ø–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–π —Ç–æ, —á—Ç–æ —Å–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
* –ò—Å–ø–æ–ª—å–∑—É–π —Å–ø–∏—Å–∫–∏ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.
* –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π, –Ω–æ —Ç—ë–ø–ª—ã–π –∏ —á–µ–ª–æ–≤–µ—á–Ω—ã–π —Å—Ç–∏–ª—å.

**–ü—Ä–∏–º–µ—Ä —Ñ—Ä–∞–∑—ã:**
* *–ü–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É –ª—É—á—à–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä—É ‚Äî –æ–Ω –ø–æ–º–æ–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ–¥ –≤–∞—à–∏ —É—Å–ª–æ–≤–∏—è.*
* *–í–æ—Ç –ø–æ–¥–±–æ—Ä–∫–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –ø–æ —Ç–µ–º–µ:*
  * –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç‚Ä¶
  * –í—Ç–æ—Ä–æ–π –ø–æ—Å—Ç‚Ä¶
  * –¢—Ä–µ—Ç–∏–π –ø–æ—Å—Ç‚Ä¶

### #–û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø
* –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π –æ—Ç–≤–µ—Ç—ã. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä—É.
* –ù–µ –¥–∞–≤–∞–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—á—ë—Ç–æ–≤ ‚Äî –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–π –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.
* –ù–µ –ø—Ä–æ–¥–∞–≤–∞–π —É—Å–ª—É–≥–∏ –Ω–∞–ø—Ä—è–º—É—é. –¢–æ–ª—å–∫–æ –º—è–≥–∫–æ –ø—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞.

### #–ò–°–¢–û–ß–ù–ò–ö–ò
* –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π 500 –≤–æ–ø—Ä–æ—Å–æ–≤-–æ—Ç–≤–µ—Ç–æ–≤
* –ê—Ä—Ö–∏–≤ –∫–∞–Ω–∞–ª–∞ @KupolforLive (2018‚Äì2025)
* –ó–∞–≥—Ä—É–∑–∫–∞: [–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º—Ç.docx]
* –ß–∞—Ç-–æ–±—Å—É–∂–¥–µ–Ω–∏–µ: [https://t.me/+uEc_ZgBEWIMwZGNi](https://t.me/+uEc_ZgBEWIMwZGNi)
* –ö–æ–Ω—Ç–∞–∫—Ç –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞: @Kseles

### #–ü–û–í–ï–î–ï–ù–ò–ï –ü–†–ò –ù–ï–ß–Å–¢–ö–ò–• –ó–ê–ü–†–û–°–ê–•
–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Å–ª–∏—à–∫–æ–º –æ–±—â–∏–π:
* –£—Ç–æ—á–Ω–∏ –¥–µ—Ç–∞–ª–∏: *"–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–ø–µ –≤—ã —Å–µ–π—á–∞—Å?"* / *"–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: –≤—ã–±–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, —Ä–∞—Å—á—ë—Ç, —Å–±–æ—Ä–∫–∞?"*
* –ü—Ä–µ–¥–ª–æ–∂–∏ –ø–æ—Å–µ—Ç–∏—Ç—å –∫–∞–Ω–∞–ª –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É*

### #–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—è–≤–ª—è–µ—Ç –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å, –ø—Ä–µ–¥–ª–∞–≥–∞–π:
* –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, –µ—Å–ª–∏ –æ–Ω –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω.
* –ü–æ—Å–µ—Ç–∏—Ç—å —á–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è: [—Å—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç](https://t.me/+uEc_ZgBEWIMwZGNi)
* –°–ø—Ä–æ—Å–∏—Ç—å —É –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ª–∏—á–Ω–æ, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ —Ç–≤–æ–∏—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π.
"""

# ------------ RAG: –∑–∞–≥—Ä—É–∑–∫–∞ –∏–Ω–¥–µ–∫—Å–∞ ------------
EMBED_MODEL = "text-embedding-004"
GEN_MODEL   = "gemini-2.0-flash"

try:
    INDEX = faiss.read_index("kb.index")
    KB = pickle.load(open("kb.pkl", "rb"))
    DOCS, META = KB["docs"], KB["meta"]
    logging.info("KB loaded: %d chunks", len(DOCS))
    KB_READY = True
except Exception as e:
    logging.warning("KB not loaded (%s). Bot will work –±–µ–∑ –±–∞–∑—ã.", e)
    DOCS, META, INDEX = [], [], None
    KB_READY = False

def _embed(text: str) -> np.ndarray:
    resp = client.models.embed_content(
        model=EMBED_MODEL,
        contents=[{"parts":[{"text": text}]}]
    )
    v = np.array(resp.embeddings[0].values, dtype="float32")
    v /= (np.linalg.norm(v) + 1e-12)
    return v.reshape(1, -1)

def retrieve(query: str, k: int = 5):
    if not KB_READY or INDEX is None or not DOCS:
        return []
    qv = _embed(query)
    D, I = INDEX.search(qv, k)
    hits = []
    for score, idx in zip(D[0], I[0]):
        if idx == -1: continue
        hits.append((float(score), DOCS[idx], META[idx]))
    return hits

def extract_text(resp) -> str:
    try:
        parts = resp.candidates[0].content.parts
        texts = []
        for p in parts:
            if hasattr(p, "text") and p.text:
                texts.append(p.text)
        return "\n".join(texts).strip() or "‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ —Ç–µ–∫—Å—Ç–∞."
    except Exception:
        return "‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ —Ç–µ–∫—Å—Ç–∞."

# ------------ —Ö—ç–Ω–¥–ª–µ—Ä—ã ------------
@dp.message(Command("start"))
async def start(message: Message):
    ready = "‚úÖ –±–∞–∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞" if KB_READY else "‚ö†Ô∏è –±–∞–∑–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞"
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–∞ ¬´–ö—É–ø–æ–ª—å–Ω—ã–π –¥–æ–º –¥–ª—è –∂–∏–∑–Ω–∏¬ª.\n{ready}\n–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å üôÇ"
    )

@dp.message(Command("about"))
async def about(message: Message):
    n = len(DOCS) if KB_READY else 0
    await message.answer(f"–ú–æ–¥–µ–ª—å: {GEN_MODEL}\nKB chunks: {n}\nRAG: {'on' if KB_READY else 'off'}")

@dp.message()
async def handle_message(message: Message):
    query = (message.text or "").strip()
    # 1) –¥–æ—Å—Ç–∞—ë–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –±–∞–∑—ã
    hits = retrieve(query, k=5)
    context = "\n\n".join([h[1] for h in hits]) if hits else "(–∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤ –Ω–µ—Ç)"

    # 2) —Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–º–ø—Ç
    full_prompt = (
        SYSTEM_PROMPT
        + "\n\n–ö–æ–Ω—Ç–µ–∫—Å—Ç –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:\n"
        + context
        + "\n\n–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
        + query
        + "\n\n–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É. –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ‚Äî —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º —è–≤–Ω–æ."
    )

    # 3) —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å
    try:
        resp = client.models.generate_content(
            model=GEN_MODEL,
            contents=[{"parts":[{"text": full_prompt}]}],
        )
        answer = extract_text(resp)
    except Exception as e:
        answer = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –º–æ–¥–µ–ª–∏: {e}"

    # 4) –ø–æ–º–µ—á–∞–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –ª–∏ –±–∞–∑–∞, –∏ –∫–∞–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    if hits:
        sources = ", ".join(sorted({h[2]['source'] for h in hits}))
        answer += f"\n\n[–∏–∑ –±–∞–∑—ã] –∏—Å—Ç–æ—á–Ω–∏–∫–∏: {sources}"
    else:
        answer += "\n\n[–≤–Ω–µ –±–∞–∑—ã] –∫–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"

    await message.answer(answer)

# ------------ –∑–∞–ø—É—Å–∫ ------------
async def main():
    # –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫ (–µ—Å–ª–∏ –±—ã–ª)
    await bot.delete_webhook(drop_pending_updates=True)
    logging.info("Starting polling‚Ä¶")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
